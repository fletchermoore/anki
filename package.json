{
  "name": "ankifork",
  "displayName": "Anki Fork",
  "description": "For personal use as I test out new features that interest me.",
  "version": "0.1.0",
  "publisher": "FletcherMoore",
  "engines": {
    "vscode": "^1.47.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fletchermoore/anki"
  },
  "categories": [
    "Notebooks",
    "Other"
  ],
  "activationEvents": [
    "onCommand:ankifork.sync",
    "onCommand:ankifork.sendToStandalone",
    "onCommand:ankifork.sendToDeck",
    "onView:decks"
  ],
  "main": "./out/extension.js",
  "icon": "anki-icon.png",
  "contributes": {
    "commands": [
      {
        "command": "ankifork.sync",
        "title": "Anki: Sync Anki"
      },
      {
        "command": "ankifork.sendToDeck",
        "title": "Anki: Send To Deck",
        "enablement": "editorLangId == markdown"
      },
      {
        "command": "ankifork.sendToStandalone",
        "title": "Anki: Send To Own Deck",
        "enablement": "editorLangId == markdown"
      },
      {
        "command": "ankifork.sendDir",
        "title": "Anki: Send All"
      },
      {
        "command": "ankifork.forceInstall",
        "title": "Anki: Force Re-install"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "decks",
          "name": "Anki Decks"
        }
      ]
    },
    "markdown.markdownItPlugins": true,
    "configuration": {
      "title": "Anki",
      "properties": {
        "ankifork.api.hostname": {
          "type": "string",
          "default": "127.0.0.1",
          "description": "API Hostname"
        },
        "ankifork.api.port": {
          "type": "number",
          "default": 8765,
          "description": "API Port"
        },
        "ankifork.api.schema": {
          "type": "string",
          "default": "http",
          "description": "http or https"
        },
        "ankifork.defaultDeck": {
          "type": "string",
          "default": "notes",
          "description": "Set's default deck when pushing from Markdown"
        },
        "ankifork.log": {
          "type": "string",
          "default": "error",
          "description": "Logging level, defaults to error",
          "enum": [
            "off",
            "error",
            "warn",
            "info",
            "trace"
          ]
        },
        "ankifork.send.allowUpdates": {
          "type": "boolean",
          "default": false,
          "description": "If true and the generated card front matches the front of a card that already exists in Anki, replace the preexisting Anki card with the newly generated card. This is useful if you plan to keep editing the source markdown files and send multiple times. This will delete the replaced anki card, which will consequently reset any learning state."
        },
        "ankifork.send.keepSync": {
          "type": "boolean",
          "default": false,
          "description": "WARNING: Will delete cards from Anki during sync. Read carefully. If true, after initially sending a markdown file to Anki, metadata will be added to the file. Upon subsequent saves to the file, Anki will be updated to reflect the changes. Cards deleted from the markdown file will be deleted from ankifork. Deleting the autogenerated metadata from the file will prevent future syncs."
        },
        "ankifork.md.card.strategy": {
          "type": "string",
          "default": "Basic Separators",
          "description": 
            "Strategy used to create cards from markdown documents. 'Nested Headers' means the deepest markdown header line indicates a card, with all parent headers becoming the front. For example in a long document about the shoulder, '# Shoulder ## Glenohumeral Joint ### List changes of osteoarthritis' would become the card front, and the back would become the content below the header '### List changes of osteoarthritis'. The option 'Basic Separators' merely splits the document about Regex patterns, which is given in the option 'ankifork.md.card.separator'. If using 'Nested Headers', this option is ignored.",
            "enum": [
              "Nested Headers",
              "Basic Separators"
            ]
        },
        "ankifork.md.card.separator": {
          "type": "string",
          "default": "(?=^##\\s)",
          "description": "Regex for card separator"
        },
        "ankifork.md.card.frontBackSeparator": {
          "type": "string",
          "default": "%",
          "description": "Text to match to split the front and back (not regex)"
        },
        "ankifork.md.card.tagPattern": {
          "type": "string",
          "default": "^\\[#(.*)\\]",
          "description": "Regex for tags"
        },
        "ankifork.md.deck.titleSeparator": {
          "type": "string",
          "default": "^#\\s",
          "description": "Parsing for Deck Name"
        },
        "ankifork.md.createTagForTitle": {
          "type": "boolean",
          "default": true,
          "description": "When you run 'Send To Deck' the title (h1) of the markdown file is stored as a tag. This is useful if you have 'daily' notes, you can use the same deck but separate cards by title"
        }
      }
    }
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node"
  },
  "scripts": {
    "compile": "webpack --mode production",
    "lint": "eslint src --ext ts",
    "watch": "webpack --mode development --watch",
    "test": "jest",
    "test-compile": "tsc -p ./",
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch"
  },
  "devDependencies": {
    "@types/cheerio": "^0.22.21",
    "@types/glob": "^7.1.1",
    "@types/jest-cli": "^24.3.0",
    "@types/marked": "^1.1.0",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/node-fetch": "^2.5.7",
    "@types/prismjs": "^1.16.1",
    "@types/semver": "^7.3.1",
    "@types/vscode": "^1.47.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "clean-webpack-plugin": "^3.0.0",
    "copy-webpack-plugin": "^6.4.0",
    "css-loader": "^5.0.1",
    "eslint": "^6.8.0",
    "file-loader": "^6.2.0",
    "glob": "^7.1.6",
    "jest": "^26.4.2",
    "jest-cli": "^26.4.2",
    "mini-css-extract-plugin": "^1.3.0",
    "node-sass": "^4.14.1",
    "sass-loader": "^10.0.5",
    "ts-jest": "^26.4.0",
    "ts-loader": "^8.0.1",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0",
    "webpack": "^5.4.0",
    "webpack-cli": "^4.2.0"
  },
  "dependencies": {
    "@vscode-logging/logger": "^1.1.0",
    "cheerio": "^1.0.0-rc.3",
    "marked": "^1.1.1",
    "node-fetch": "^2.6.1",
    "prismjs": "^1.20.0",
    "semver": "^7.3.2"
  }
}
